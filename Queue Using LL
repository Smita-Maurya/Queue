class Queue {
	Node *head;
	Node *tail;
	//int nextindex;
	//int firstindex;
	int size ;
	// Define the data members
   public:
    Queue() {
		head=NULL;
		tail =NULL;
		//nextindex =0;
		//firstindex =-1;
		size=0;
		// Implement the Constructor
	}
	
	/*----------------- Public Functions of Stack -----------------*/

	int getSize() {
		 
		// Implement the getSize() function
		return size;
	}

    bool isEmpty() {
		if(head==NULL){
			return 1;
		}
		else{
			return 0;
		}
		// Implement the isEmpty() function
	}

    void enqueue(int data) {
		Node *newnode = new Node(data);
		if(head ==NULL){
			head=newnode ;
			tail=newnode;
		}
		else{
		tail->next=newnode;
		tail=tail->next;
		}
		size++;
		// Implement the enqueue() function
	}

    int dequeue() {
		if(isEmpty()){
			return -1;
		}
		int ans = head->data;
		Node *temp =head;
		head=head->next;
		delete temp;
		size--;
		
		return ans;
        // Implement the dequeue() function
    }

    int front() {
		if(isEmpty()){
			return -1;

		}

		return head->data;
        // Implement the front() function
    }
};
